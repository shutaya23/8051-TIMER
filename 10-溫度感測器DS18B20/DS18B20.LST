C51 COMPILER V9.54   DS18B20                                                               05/01/2017 10:53:04 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN DS18B20.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE DS18B20.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>
   3          
   4          #define uchar unsigned char
   5          
   6          #define uint unsigned int
   7          
   8          sbit DS=P3^3;           //定義DS18B20界面
   9          
  10          int temp;             
  11          
  12          uchar flag1;            
  13          
  14          void display(unsigned char *lp,unsigned char lc);//數字的顯示函數；lp為指向數組的位址，lc為顯示的個數
  15          
  16          void delay();//延時子函數，5個空指令
  17          
  18          code unsigned char table[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x40,0x08,0x00};
  19                //七段顯示器 0-9 - _ 空 表
  20          
  21          unsigned char l_tmpdate[8]={0,0,10,0,0,0,0,0};//定義數組變量，並給予1，2，3，4，5，6，7，8，就是本程式顯示
             -的八個數
  22          int tmp(void);
  23          void tmpchange(void);
  24          void tmpwritebyte(uchar dat);
  25          uchar tmpread(void);
  26          bit tmpreadbit(void);
  27          void dsreset(void);
  28          void delayb(uint count);
  29          
  30          
  31          void main()               //程式開始
  32          
  33          {
  34   1      uchar i;
  35   1      int l_tmp;
  36   1        while(1)
  37   1        {
  38   2        tmpchange();      //溫度轉換
  39   2        l_tmp=tmp();
  40   2        if(l_tmp<0)   
  41   2        l_tmpdate[0]=10;  //判斷溫度為負溫度，前面加"-"
  42   2        else
  43   2        {
  44   3        l_tmpdate[0]=temp/1000; //顯示百位，這裡用1000，是因為我們之前乖以10位了
  45   3        if(l_tmpdate[0]==0)   
  46   3          l_tmpdate[0]=12;//判斷溫度為正溫度且沒有上百，前面不顯示
  47   3        }
  48   2      l_tmp=temp%1000;
  49   2      l_tmpdate[1]=l_tmp/100;//截取十位
  50   2      l_tmp=l_tmp%100;
  51   2      l_tmpdate[2]=l_tmp/10;//截取個位
  52   2      l_tmpdate[3]=11;  
  53   2      l_tmpdate[4]=l_tmp%10;//截取小數第一位
  54   2      
C51 COMPILER V9.54   DS18B20                                                               05/01/2017 10:53:04 PAGE 2   

  55   2      for(i=0;i<10;i++){    //循環輸出10次，提升亮度
  56   3      display(l_tmpdate,5);   
  57   3      
  58   3         }              
  59   2      }
  60   1        
  61   1      
  62   1      }
  63          
  64          void display(unsigned char *lp,unsigned char lc)//顯示
  65          {
  66   1        unsigned char i;    //定義變量
  67   1        P2=0;         //P2為輸出
  68   1        P1=P1&0xF8;       //將P1的前3位輸出0，對應138輸入腳，全0為第一位七段顯示器
  69   1        for(i=0;i<lc;i++){    //循環顯示
  70   2        P2=table[lp[i]];    //查表法得到要顯示數字
  71   2        delay();        //延時5個空指令 
  72   2        if(i==7)        //檢測顯示完8位否，完成直接退出，不讓P1再加1，否則進位影響到第四位資料
  73   2          break;
  74   2        P2=0;         //清除為0，準備顯示下一位數
  75   2        P1++;         //下一位七段顯示器
  76   2        }
  77   1      }
  78          void delay(void)                //空5個指令
  79          {
  80   1      _nop_();_nop_();_nop_();_nop_();_nop_();
  81   1      }
  82          void delayb(uint count)      //delay
  83          
  84          {
  85   1      
  86   1        uint i;
  87   1      
  88   1        while(count)
  89   1      
  90   1        {
  91   2      
  92   2          i=200;
  93   2      
  94   2          while(i>0)
  95   2      
  96   2          i--;
  97   2      
  98   2          count--;
  99   2      
 100   2        }
 101   1      
 102   1      }
 103          
 104          
 105          void dsreset(void)       //DS18B20初始化
 106          
 107          {
 108   1      
 109   1        uint i;                
 110   1      
 111   1        DS=0;
 112   1      
 113   1        i=103;
 114   1      
 115   1        while(i>0)i--;
 116   1      
C51 COMPILER V9.54   DS18B20                                                               05/01/2017 10:53:04 PAGE 3   

 117   1        DS=1;
 118   1      
 119   1        i=4;
 120   1      
 121   1        while(i>0)i--;
 122   1      
 123   1      }
 124          
 125           
 126          
 127          bit tmpreadbit(void)       // 讀一位
 128          
 129          {
 130   1      
 131   1         uint i;
 132   1      
 133   1         bit dat;
 134   1      
 135   1         DS=0;i++;          //小延時一下
 136   1      
 137   1         DS=1;i++;i++;
 138   1      
 139   1         dat=DS;
 140   1      
 141   1         i=8;while(i>0)i--;
 142   1      
 143   1         return (dat);
 144   1      
 145   1      }
 146          
 147           
 148          
 149          uchar tmpread(void)   //讀一個位元組
 150          
 151          {
 152   1      
 153   1        uchar i,j,dat;
 154   1      
 155   1        dat=0;
 156   1      
 157   1        for(i=1;i<=8;i++)
 158   1      
 159   1        {
 160   2      
 161   2          j=tmpreadbit();
 162   2      
 163   2          dat=(j<<7)|(dat>>1);   //讀出的資料最低位在最前面，這樣剛好//一個位元組在DAT裡
 164   2      
 165   2        }
 166   1      
 167   1        return(dat);             //將一個位元組資料返回
 168   1      
 169   1      }
 170          
 171           
 172          
 173          void tmpwritebyte(uchar dat)   
 174          
 175          {                           //寫一個位元組到DS18B20裡
 176   1      
 177   1        uint i;
 178   1      
C51 COMPILER V9.54   DS18B20                                                               05/01/2017 10:53:04 PAGE 4   

 179   1        uchar j;
 180   1      
 181   1        bit testb;
 182   1      
 183   1        for(j=1;j<=8;j++)
 184   1      
 185   1        {
 186   2      
 187   2          testb=dat&0x01;
 188   2      
 189   2          dat=dat>>1;
 190   2      
 191   2          if(testb)     // 寫1部分
 192   2      
 193   2          {
 194   3      
 195   3            DS=0;
 196   3      
 197   3            i++;i++;
 198   3      
 199   3            DS=1;
 200   3      
 201   3            i=8;while(i>0)i--;
 202   3      
 203   3          }
 204   2      
 205   2          else
 206   2      
 207   2          {
 208   3      
 209   3            DS=0;       //寫0部分
 210   3      
 211   3            i=8;while(i>0)i--;
 212   3      
 213   3            DS=1;
 214   3      
 215   3            i++;i++;
 216   3      
 217   3          }
 218   2      
 219   2        }
 220   1      
 221   1      }
 222          
 223           
 224          
 225          void tmpchange(void)  //發送溫度轉換命令
 226          
 227          {
 228   1      
 229   1        dsreset();             //初始化DS18B20
 230   1      
 231   1        delayb(1);             //延時
 232   1      
 233   1        tmpwritebyte(0xcc);  // 跳過序列號命令
 234   1      
 235   1        tmpwritebyte(0x44);  //發送溫度轉換命令
 236   1      
 237   1      }
 238          
 239          int tmp()               //獲得溫度
 240          
C51 COMPILER V9.54   DS18B20                                                               05/01/2017 10:53:04 PAGE 5   

 241          {
 242   1      
 243   1        float tt;
 244   1      
 245   1        uchar a,b;
 246   1      
 247   1        dsreset();
 248   1      
 249   1        delayb(1);
 250   1      
 251   1        tmpwritebyte(0xcc);   
 252   1      
 253   1        tmpwritebyte(0xbe);    //發送讀取資料命令
 254   1      
 255   1        a=tmpread();          //連續讀兩個位元組資料
 256   1      
 257   1        b=tmpread();
 258   1      
 259   1        temp=b;
 260   1      
 261   1        temp<<=8;             
 262   1      
 263   1        temp=temp|a;         //兩位元組合成一個整型變量。
 264   1      
 265   1        tt=temp*0.0625;       //得到真實十進製溫度值，因為DS18B20
 266   1      
 267   1      //可以精確到0.0625度，所以讀回資料的最低位代表的是
 268   1      
 269   1      //0.0625度。
 270   1      
 271   1        temp=tt*10+0.5;   //放大十倍，這樣做的目的將小數點後第一位
 272   1      
 273   1      //也轉換為可顯示數字，同時進行一個四捨五入操作。
 274   1      
 275   1        return temp;     //返回溫度值
 276   1      
 277   1      }
 278          
 279          void readrom()          //read the serial 讀取溫度感測器的序列號
 280          
 281          {                      //本程式中沒有用到此函數
 282   1      
 283   1        uchar sn1,sn2;
 284   1      
 285   1        dsreset();
 286   1      
 287   1        delayb(1);
 288   1      
 289   1        tmpwritebyte(0x33);
 290   1      
 291   1        sn1=tmpread();
 292   1      
 293   1        sn2=tmpread();
 294   1      
 295   1      }
 296          
 297          void delay10ms()            
 298            {
 299   1      
 300   1          uchar a,b;
 301   1      
 302   1          for(a=10;a>0;a--)
C51 COMPILER V9.54   DS18B20                                                               05/01/2017 10:53:04 PAGE 6   

 303   1      
 304   1            for(b=60;b>0;b--);
 305   1      
 306   1         }
 307          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    547    ----
   CONSTANT SIZE    =     13    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
